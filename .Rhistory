42
log(2)
log(2,71)
log(2.71)
log(2.72)
log(2.718)
log(2.7199)
log(2.7191)
log(2.7185)
log(2.7181)
log(2.71834)
log(2.71824)
log(2.71828)
log(2.718294)
log(2.718291)
log(2.718288)
log(2.718285)
log(2.718284)
log(2.718282)
helps
help
help()
q
q()
help()
help(log())
help(log)
?log
help.start()
scan()
scan()
scan
scan()
scan()
> paste('Bonjour j\'ai ', scan(nmax=1), ' ans')
paste('Bonjour j\'ai ', scan(nmax=1), ' ans')
paste('Bonjour j\'ai', scan(nmax=1), 'ans')
paste('a','b','c','d')
paste('a','b','c','d',sep='')
variable <- "bonjour"
cariable
variable
toupper(substr(variable,2,nchar(variable)-1)
toupper(substr(variable,2,nchar(variable)-1))
toupper(substr(variable,2,(nchar(variable)-1)))
toupper(substr(variable,2,nchar(variable)-1))
ls
ls()
q(yes)
q("yes")
source("C:\\Users\\sya\\Desktop\\R\\test.R")
source("C:\Users\sya\Desktop\R")
source("Users\sya\Desktop\R")
source("Users/sya/Desktop/R")
source("Users/sya/Desktop/R/test*")
source("Users/sya/Desktop/R/test.R")
source("/Users/sya/Desktop/R/test.R")
ls()
getwd()
a <-42
ls()
q()
getwd()
setwd("/Users/sya/Desktop/learning-R")
ls()
load("donnees/Chapitre7.RData")
ls()
intersect(names(tailleG),names(performanceG))->communG
communG
communF<-intersect(names(tailleF),names(performanceF))
commun
communF
setdiff(tailleG,performanceG)
setdiff(names(tailleG),names(performanceG))
setdiff(names(performanceG),names(tailleG))
tailleG %in% performanceG
tailleG[names(tailleG) %in% names(performanceG)]
length(tailleG[names(tailleG) %in% names(performanceG)])
tailleG2<-tailleG[communG]
tailleF2<-tailleG[communF]
ls()
performanceG2<-performanceG[communG]
performancef2<-performancef[communf]
performancef2<-performancef[communF]
performanceF2<-performanceF[communF]
tailleFé
tailleF2
tailleF2<-tailleF[communF]
tailleF2
tailleG2
performanceG2
performanceG2
performanceF2
tailleG2_tri <- tailleG2[order(tailleG2)]
performanceG2_tri <- performanceG2[order(tailleG2)]
 
tailleF2_tri <- tailleF2[order(tailleF2)]
performanceF2_tri <- performanceF2[order(tailleF2)]
ls()
tailleG2_tri
performanceG2_tri
cor(tailleG2,performanceG2)
cor(tailleF2,performanceF2)
tailleF2
performanceF2
cor(tailleF2,performanceF2,na.rm=T)
cor(tailleF2,performanceF2,na.rm=True)
cor(tailleF2,(performanceF2,na.rm=True))
lm(performanceG2 ~ tailleG2)
lm(performanceF2 ~ tailleF2)
cor.test(performanceG2, tailleG2)
cor.test(performanceF2, tailleF2)
median(performanceG)
median(performanceF2)
median(performanceG2)
median(performanceF)
wilcox.test(performanceF2,performanceG2)
notes <- factor(c("A","B","A","B","C","B","D"))
notes
notes <- factor(c("A","B","A","B","C","B","D"), levels=c("A","B","C","D","E","F"))
notes
names(notes) <- c("DM1","DS1","DS2","DM2","DS3","DS4","DS5")
notes
length(notes)
8->length(notes)
notes
notes<-notes[1:length(notes)-1]
notes
notes[2,4]
notes[c(2,4)]
levels(notes) <- c(levels(notes), "G")
levels(notes)
vec_notes<-as.vector(notes)
vec_notes
vecteur<-rep("su",10)
vecteur
facteur<-as.factor(vecteur)
afcteur
facteur
facteur<-as.factor(vecteur, levels=c("bastard"))
facteur<-as.factor(vecteur, levels=c("su","bastard"))
help(as.factor)
facteur<-as.factor(vecteur, levels=c("su","bastard"))
levels(facteur)<-c(levels(facteurs,"bastard"))
levels(facteur)
levels(facteur)<-c(levels(facteurs),"bastard"))
levels(facteur)<-c(levels(facteurs),"bastard")
levels(facteur)<-c(levels(facteur),"bastard")
facteur
help(as.numeric)
as.numeric(factor(5:10))
as.numeric(as.character(factor(5:10)))
is.vector(as.numeric(as.character(factor(5:10))))
is.factor(as.numeric(as.character(factor(5:10))))
as.character(factor(5:10))
is.vector(as.character(factor(5:10)))
is.factor(as.character(factor(5:10)))
is.factor((factor(5:10)))
is.vector((factor(5:10)))
help(as.character)
as.vector(factor(5:10))
mat <- matrix(nrow=2, ncol=3)
mat
mat <- matrix(2,3)
mat
mat <- matrix(2,3,3)
mat
mat <- matrix(nrow=2, ncol=3)
 mat <- matrix(data=1:6, nrow=2, ncol=3)
mat
 mat <- matrix(data=1:6, nrow=2, ncol=3,false)
 mat <- matrix(data=1:6, nrow=2, ncol=3,F$)
 mat <- matrix(data=1:6, nrow=2, ncol=3,F)
mat
 mat <- matrix(data=1:6, nrow=2, ncol=3,T)
mat
matrice <- matrix(c(Pierre, Nathalie, Jacques, Julie), nrow=4, ncol=3, byrow=T)
Pierre <- c(8,9,15)
Nathalie <- c(17,12,13)
Jacques <- c(11,15,7)
Julie <- c(5,12,19)
matrice <- matrix(c(Pierre, Nathalie, Jacques, Julie), nrow=4, ncol=3, byrow=T)
matrice
names(matrice)
rownames(matrice)
colnames(matrice)
check
null
print(?)
print(&"é?é")
print("&é?é")
print("&"é?é")
print("&\"é?é")
print("&\'é?é")
print("&"é?é")
print("&\"é?é")
 rownames(matrice) <- c("Pierre","Nathalie", "Jacques", "Julie")
colnames(matrice) <- c("Histoire", "Biologie", "Sport")
matric
matrice
matrice[1]
matrice[2]
matrice[,2]
matrice[]
matrice
matrice[2:4, c("Histoire", "Sport")]
matrice[sort(rownames(matrice))[1:3], colnames(matrice)[c(1,3)]]
matrice[1]
matrice[1,]
mean(sort(matrice[,"Sport"])[1:])
mean(sort(matrice[,"Sport"])[1:3])
sort(matrice[,"Sport"])[1:3]
sort(matrice[,"Sport"])[2:4]
mean(sort(matrice[,"Sport"])[2:4])
data.frame()
ls
ls()
resultats <- data.frame(taille=c(185,178,165,171,172), poids=c(82,81,55,65,68), QI=c(110,108,125,99,124), sexe=c("M","M","F","F","F"), row.names=c("Paul","Matthieu","Camille","Mireille","Capucine"))
resultats
ls()
test <- data.frame(pierre,julie)
Julie
data.frame(Julie,Jacques)
names(Julie)
test
data.frame(matrice[,1])
data.frame(matrice[1,])
results
resultats
resultats[Camille,taille]
resultats[Camille,"taille"]
resultats["Camille","taille"]
resultats["taille","Camille"]
resultats[1:3,c("QI","sexe")]
resultats[c("Paul","Capucine),]
resultats[c("Paul","Capucine)]
resultats[c("Paul","Capucine),]
resultats[c("Paul","Capucine),1:nrow]
resultats[c("Paul","Capucine"),1:nrow]
resultats[c("Paul","Capucine")]
c("Paul","Capucine")
resultats[c("Paul","Capucine"),]
resultats$poids
resultats[poids]
resultats[poids,]
resultats[,poids]
resultats[,"poids"]
resultats[,"sexe"]
is.vector(resultats[,"poids"])
is.vector(resultats[,"sexe"])
ls()
attach(resultats)
ls()
taille
ls()
b<-???
b<-"???"
ls()
ls()
so
os
QI
ls(QI)
ls
ls()
ls(resultats)
ls(matriec)
ls(matriece)
ls(matrice)
ls(vecteur)
test
data.frame(seq(0,4);seq(1,4);seq(3,4))
test<-data.frame(seq(0,4),seq(1,4),seq(3,4))
seq(0,5)
test<-data.frame(seq(0,4),seq(0,4),seq(0,4))
test
ls(test)
seq.0..4
attach(test)
seq.0..4
ls(test)
seq.0..4.
detach(test)
seq.O..4.
ls(test)
save.image("C:\\Users\\sya\\Desktop\\Learning-R\\.RData")
q()
