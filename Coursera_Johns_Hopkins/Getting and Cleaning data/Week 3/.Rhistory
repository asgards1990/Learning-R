q()
source("C:\\Users\\sya\\Documents\\lastsave .R")
q()
x <- list(a = 1:5,b = rnorm(10))
x
a
lapply(x,mean)
mean(x)
help runif
help 'runif'
help(runif)
sapply(x,mean)
clf
clean
drop variables
ls
ls()
rm(ls())
rm.list(ls())
rm(list(ls))
rm(list(ls()))
rm(ls(a=TRUE))
rm(ls(all=TRUE))
rm(list=ls(all=TRUE))
x =1
rm(list=ls())
c(2,2,10)
rnorm(2*2*10)
a <- array(rnorm(2*2*10),c(2,2,10))
a
help(gl)
vector <- c(1,2,3,4,5)
tapply(vector,1,vector)
tapply(vector,1:5,vector)
help(interaction)
f1 <- gl(2,5)
f2 w- gl(5,2)
f1
f2
f2 <- gl(5,2)
f2
interaction(f1,f2)
f3 <- (3,3)
f3 <- gl(3,3)
f3
interaction(f1,f3)
numeric()
x <- numeric(10)
x
y <- matrix()
y
type(y)
is.type(y)
class(x)
class(y)
source('C:/Users/sya/Desktop/Learning-R/scripts/functions.R')
source('C:/Users/sya/Desktop/Learning-R/Coursera_Johns_Hopkins/Assignment_2/cacheSolve.R')
source('C:/Users/sya/Desktop/Learning-R/Coursera_Johns_Hopkins/Assignment_2/makeCacheMatrix.R')
pwd
getwd
getwd()
x <- matrix(c(0,1),c(1,0))
xx
x
x <- c(c(0,1),c(1,0))
x
x <- c(c(0,1);c(1,0))
x <- cbind(c(0,1);c(1,0))
x <- cbind(c(0,1),c(1,0))
x
solve(x)
x*x
solve(x)
help(solve)
solve(x)
class(x)
as.real(x)
as.integer(x)
x
as.numerical(x)
as.numeric(x)
x
solve(x,id)
solve(X)
solve(x)
View(x)
View(matrice)
View(mat)
View(x)
source('C:/Users/sya/Desktop/Learning-R/Coursera_Johns_Hopkins/Assignment_2/cacheSolve.R')
eigen(x)
eigen(x)$val
solve(x)
y <- rnorm(5)
y
y <- rnorm(5,5)
y
yhelp(rnorm)
help(rnorm)
y <- rnorm(c(5,5)
)
y
rep(5,5)
y <- mapply(rnorm,rep(5,5))
y
solve(y)
y*solve(y)
y
y %*% solve(y)
x
x %*% x
source('C:/Users/sya/Desktop/Learning-R/Coursera_Johns_Hopkins/Assignment_2/cacheSolve.R')
y
z
z <- makeCacheMatrix(y)
z
z$inv
z$get
z$get()
z$getInv()
cacheSolve(z)
z
z$inv
source('C:/Users/sya/Desktop/Learning-R/Coursera_Johns_Hopkins/Assignment_2/cacheSolve.R')
cacheSolve(z)
z
z$getInv()
z$inv
z$ze
x
x <- makeCacheMatrix(x)
x
x$getInv
x$getInv()
cacheSolve(x)
x
x$getInv()
cacheSolve(x)
x$get()
x$get()
x
source('C:/Users/sya/Desktop/Learning-R/Coursera_Johns_Hopkins/Assignment_2/makeCacheMatrix.R')
source('C:/Users/sya/Desktop/Learning-R/Coursera_Johns_Hopkins/Assignment_2/cacheSolve.R')
x
x <- cbind(c(0,1),c(1,0))
x
x <- makeCacheMatrix(x)
x
x$get()
z$get()
x$get()
x
z
A <- cbind(c(0,1),c(1,0))
A
A <- makeCacheMatrix(A)
A
A$get()
A <- makeCacheMatrix(A)
A <- cbind(c(0,1),c(1,0))
A
x <- makeCacheMatrix(A)
A
x
A$get()
x$get()
x$getInv()
cacheSolve(x)
source('C:/Users/sya/Desktop/Learning-R/Coursera_Johns_Hopkins/Assignment_2/cacheSolve.R')
x
x$getInv
x$getInv()
source('C:/Users/sya/Desktop/ProgrammingAssignment2/cachematrix.R')
## of the instance makeCacheMatrix
## If an existing stored inverse already exists, no
source('C:/Users/sya/Desktop/ProgrammingAssignment2/cachematrix.R')
y
b
b <- makeCacheMatrix(y)
b
b$getInv()
cacheSolve(b)
z$getInv
z$getInv()
b$getInv()
source('C:/Users/sya/Desktop/Learning-R/Coursera_Johns_Hopkins/quizz_Week_3.R')
source('C:/Users/sya/Desktop/Learning-R/Coursera_Johns_Hopkins/quizz_Week_3.R')
?iris
rm(list=ls())
source('C:/Users/sya/Desktop/Learning-R/Coursera_Johns_Hopkins/quizz_Week_3.R')
A=[1,2,2,1,3,5,4,1,2]
A==1
A=c(1,2,2,1,3,5,4,1,2)
A==1
A(A==1)
A[A==1]
iris
source('C:/Users/sya/Desktop/Learning-R/Coursera_Johns_Hopkins/quizz_Week_3.R')
iris["virginica"]
iris["species"]
iris["Species"]
"abc"=="cde"
"abc"=="abc"
source('C:/Users/sya/Desktop/Learning-R/Coursera_Johns_Hopkins/quizz_Week_3.R')
iris[iris["Species"]=="Virginica","Sepal.length"]
iris["Species"]=="Virginica"
iris[iris["Species"]=="virginica","Sepal.length"]
iris["Species"]
iris["Species"]=="virginica"
iris["Species"]=="virginica"
iris[iris["Species"]=="virginica","Sepal.length"]
iris
iris[iris["Species"]=="virginica","sepal.length"]
iris[iris["Species"]=="virginica";"Sepal.length"
iris[iris["Species"]=="virginica";"Sepal.length"]
A=[1,2,3;2;5;6]
A=c(c(1,2,3,2,5,6),c(1,2,3,2,5,6),c(1,2,3,2,5,6),c(1,2,3,2,5,6))
A
A=cbind(c(1,2,3,2,5,6),c(1,2,3,2,5,6),c(1,2,3,2,5,6),c(1,2,3,2,5,6))
A
A(A[,1]==2)
A[,1]
A[,1]==2
A(A[,1]==2,2)
A[A[,1]==2,2]
iris[iris[,"Species"]=="virginica","Sepal.length"]
iris[iris["Species"]=="virginica","Sepal.length"]
iris[iris["Species"]=="virginica",1]
iris[iris["Species"]=="virginica","Sepa.length"]
colnames(A)=[a,b,c,d]
colnames(A)=c(a,b,c,d)
colnames(A)=c("a","b","c","d")
A
A[A[,1]==2,"a"]
colnames(iris)
iris[iris["Species"]=="virginica","Sepa.Length"]
iris[iris["Species"]=="virginica","Sepal.Length"]
mean(iris[iris["Species"]=="virginica","Sepal.Length"])
mean(iris[iris["Species"]=="virginica","Sepal.Length"],na.rm=TRUE)
rowMeans(iris)
rowMeans(iris[,1:4])
colMeans(iris[,1:4])
colMeans(iris[iris["Species"]=="virginica",1:4])
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
source('C:/Users/sya/Desktop/Learning-R/Coursera_Johns_Hopkins/quizz_Week_3.R')
?mtcars
mtcars
mean(mtcars$mpg, mtcars$cyl)
?with
apply(mtcars, 2, mean)
split(mtcars, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mpg, cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
x <- with(mtcars, tapply(mpg, cyl, mean))
x
x(8)-x(4)
x[8]-x[4]
x[8]
x["4"]
x["8"]-x["4"]
abs(x["8"]-x["4"])
source('C:/Users/sya/Desktop/Learning-R/Coursera_Johns_Hopkins/quizz_Week_3.R')
hpcyl
abs(hpcyl[8]-hpcyl[4])
abs(hpcyl["8"]-hpcyl["4"])
source('C:/Users/sya/Desktop/Learning-R/Coursera_Johns_Hopkins/quizz_Week_3.R')
debug(ls)
ls
ls()
q
stop
quit
qio()
quit()
quit
quit()
a
x
Q
ls()
cont
s
str(help)
str(mean)
summary(mean)
summary(A)
rnorm(2,4)
help(rpois)
system.time() Rprof()
system.time(Rprof)
Rprof
system.time(a==1)
Rprof
system.time(a==1)
sample.interval=10000
sample
help(table)
setwd("C:/Users/sya/Desktop/Learning-R/Coursera_Johns_Hopkins/Getting and Cleaning data/Week 3")
imageQ2 <- readJPEG(system.file("img","getdata-jeff.jpg",package="jpeg"),TRUE)
library(jpeg)
imageQ2 <- readJPEG(system.file("img","getdata-jeff.jpg",package="jpeg"),TRUE)
system.file("img","getdata-jeff.jpg",package="jpeg")
image = system.file("img","getdata-jeff.jpg",package="jpeg")
image
readJPEG(image)
readJPEG("getdata-jeff.jpg")
imageQ2 <- readJPEG("getdata-jeff.jpg",TRUE)
imageQ2
Q2 <- quantile(imageQ2,na.rm=T, probs=c(0.3,0.8))
Q2
help(match)
url3_1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url3_2 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url1,dest="./dataQuestion3_1.csv")
download.file(url1,dest="./dataQuestion3_2.csv")
dataQ3_1 <- read.csv("./dataQuestion3_1.csv")
dataQ3_2 <- read.csv("./dataQuestion3_2.csv")
url3_1 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url3_2 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url1,dest="./dataQuestion3_1.csv")
download.file(url1,dest="./dataQuestion3_2.csv")
dataQ3_1 <- read.csv("./dataQuestion3_1.csv")
dataQ3_2 <- read.csv("./dataQuestion3_2.csv")
url3_1 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url3_2 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url3_1,dest="./dataQuestion3_1.csv")
download.file(url3_1,dest="./dataQuestion3_2.csv")
dataQ3_1 <- read.csv("./dataQuestion3_1.csv")
dataQ3_2 <- read.csv("./dataQuestion3_2.csv")
View(dataQ3_1)
View(dataQ3_2)
names(dataQ3_1)
url3_1 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url3_2 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url3_1,dest="./dataQuestion3_1.csv")
download.file(url3_2,dest="./dataQuestion3_2.csv")
dataQ3_1 <- read.csv("./dataQuestion3_1.csv")
dataQ3_2 <- read.csv("./dataQuestion3_2.csv")'
''
url3_1 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url3_2 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url3_1,dest="./dataQuestion3_1.csv")
download.file(url3_2,dest="./dataQuestion3_2.csv")
dataQ3_1 <- read.csv("./dataQuestion3_1.csv")
dataQ3_2 <- read.csv("./dataQuestion3_2.csv")
View(dataQ3_2)
View(dataQ3_1)
dataQ3_1 <- dataQ3_1["Gross.domestic.product.2012"<=190]
View(dataQ3_1)
dataQ3_1 <- read.csv("./dataQuestion3_1.csv")
dataQ3_1 <- dataQ3_1[dataQ3_1$Gross.domestic.product.2012<=190]
names(dataQ3_1)
dataQ3_1 <- dataQ3_1["Gross.domestic.product.2012"<=190,]*
*
dataQ3_1 <- dataQ3_1["Gross.domestic.product.2012"<=190,]
"Gross.domestic.product.2012"<=190
dataQ3_1$Gross.domestic.product.2012<=190
dataQ3_1$Gross.domestic.product.2012
dataQ3_1$Gross.domestic.product.2012<190
vector(dataQ3_1$Gross.domestic.product.2012)<190
as.vector(dataQ3_1$Gross.domestic.product.2012)<190
match(dataQ3_1,dataQ3_2)
match(dataQ3_1$X,dataQ3_2$CountryCode)
match(dataQ3_2$CountryCode,dataQ3_1$X)
dataQ3_1 <- read.csv("./dataQuestion3_1.csv")
View(dataQ3_1)
help(download.file)
help(read.csv)
dataQ3_1 <- read.csv("./dataQuestion3_1.csv",skip=2)
View(dataQ3_1)
read.csv("./dataQuestion3_1.csv",skip=3)
dataQ3_1 <- read.csv("./dataQuestion3_1.csv",skip=3)
View(dataQ3_1)
dataQ3_1$ranking
dataQ3_1$Ranking
dataQ3_1$Ranking<=190
dataQ3_1$Ranking==190
dataQ3_1$Ranking<=190
is.na(dataQ3_1$Ranking)
is.missing(dataQ3_1$Ranking)
is.null(dataQ3_1$Ranking)
as.numeric(dataQ3_1$Ranking)<=190
as.numeric(dataQ3_1$Ranking)
type(dataQ3_1$Ranking)
types(dataQ3_1$Ranking)
attributes(dataQ3_1$Ranking)
dataQ3_1$Ranking
dataQ3_1$X
match(dataQ3_1$X,dataQ3_2$CountryCode)
which(!is.na(match(dataQ3_1$X,dataQ3_2$CountryCode)))
sum(!is.na(match(dataQ3_1$X,dataQ3_2$CountryCode)))
sum(!is.na(match(dataQ3_2$CountryCode,dataQ3_1$X)))
help(match)
source('C:/Users/corpus/Desktop/Learning-R/Coursera_Johns_Hopkins/Getting and cleaning data/Week 3/Quizz_week_3.R')
C:\Users\corpus\Desktop\Learning-R\Coursera_Johns_Hopkins\Getting and cleaning data\Week 3
C:/Users/corpus/Desktop/Learning-R/Coursera_Johns_Hopkins/Getting and cleaning data/Week 3
setwd("C:/Users/corpus/Desktop/Learning-R/Coursera_Johns_Hopkins/Getting and cleaning data/Week 3")
source('~/.active-rstudio-document')
install.packages("jpeg")
source('C:/Users/corpus/Desktop/Learning-R/Coursera_Johns_Hopkins/Getting and cleaning data/Week 3/Quizz_week_3.R')
View(dataQ3_1)
View(dataQ3_2)
source('~/.active-rstudio-document')
matchingData
sum(!is.na(matchingData))
sum(!is.na(unique(matchingData))
)
matchingData <- match(dataQ3_2$CountryCode,dataQ3_1$X)
sum(!is.na(unique(matchingData)))
matchingData
dataQ1[1,2]
highOECD <- dataQ3_2[dataQ3_2[Income.group=="High income: nonOECD"]]
highOECD <- dataQ3_2[dataQ3_2[Income.Group=="High income: nonOECD"]]
dataQ3_2[dataQ3_2[,"Income.Group"]=="High income: nonOECD"]
names(highOECD)
names(dataQ3_2)
dataQ3_2[,"Income.Group"]
dataQ3_2[,"Income.Group"]=="High income: nonOECD"
dataQ3_2[dataQ3_2[,"Income.Group"]=="High income: no
s
highOECD <- dataQ3_2[dataQ3_2[,"Income.Group"]=="High income: OECD"]
highOECD <- dataQ3_2[dataQ3_2[,"Income.Group"]=="High income: OECD",
"CountryCode"]
highOECD
match(highOECD,dataQ3_1$X)
dataQ3_1["X"==match(highOECD,dataQ3_1$X),"ranking"]
dataQ3_1[match(highOECD,dataQ3_1$X),"ranking"]
dataQ3_1[match(highOECD,dataQ3_1$X),]
averageHighOECD <- mean(dataQ3_1[match(highOECD,dataQ3_1$X,"Ranking"]))
mean(dataQ3_1[match(highOECD,dataQ3_1$X),"Ranking"])
dataQ3_1[match(highOECD,dataQ3_1$X),"Ranking"]
sum(dataQ3_1[match(highOECD,dataQ3_1$X),"Ranking"])
as.vector(dataQ3_1[match(highOECD,dataQ3_1$X),"Ranking"])
mean(as.vector(dataQ3_1[match(highOECD,dataQ3_1$X),
"Ranking"]))
as.vector(dataQ3_1[match(highOECD,dataQ3_1$X),
"Ranking"])
sum(as.vector(dataQ3_1[match(highOECD,dataQ3_1$X),
"Ranking"]))
mean(as.numeric(dataQ3_1[match(highOECD,dataQ3_1$X),
"Ranking"]))
as.numeric(dataQ3_1[match(highOECD,dataQ3_1$X),
"Ranking"])
mean(as.integer(dataQ3_1[match(highOECD,dataQ3_1$X),
"Ranking"]))
as.numeric(as.character(dataQ3_1[match(highOECD,dataQ3_1$X),
"Ranking"])
)
mean(as.numeric(as.character(dataQ3_1[
match(highOECD,dataQ3_1$X),"Ranking"])))
averageHighOECD <- mean(as.numeric(as.character(dataQ3_1[
match(highOECD,dataQ3_1$X),"Ranking"])))
averageHighNonOECD <- mean(as.numeric(as.character(dataQ3_1[
match(highNonOECD,dataQ3_1$X),"Ranking"])))
highOECD <- dataQ3_2[dataQ3_2[,"Income.Group"]=="High income: OECD",
"CountryCode"]
highNonOECD <- dataQ3_2[dataQ3_2[,"Income.Group"]=="High income: nonOECD",
"CountryCode"]
averageHighOECD <- mean(as.numeric(as.character(dataQ3_1[
match(highOECD,dataQ3_1$X),"Ranking"])))
averageHighNonOECD <- mean(as.numeric(as.character(dataQ3_1[
match(highNonOECD,dataQ3_1$X),"Ranking"])))
as.character(dataQ3_1[
match(highNonOECD,dataQ3_1$X),"Ranking"])
as.numeric(as.character(dataQ3_1[
match(highNonOECD,dataQ3_1$X),"Ranking"])
)
averageHighNonOECD <- mean(as.numeric(as.character(dataQ3_1[
match(highNonOECD,dataQ3_1$X),"Ranking"])),na.rm=T)
source('~/.active-rstudio-document')
ranking
help(quantile)
quantileGroup <- quantile(ranking,na.rm=T, probs=seq(0,1,length=6))
quantileGroup
quantileGroup <- quantile(ranking,na.rm=F, probs=seq(0,1,length=6))
lowerMiddleIncome <- dataQ3_2[dataQ3_2[,"Income.Group"]=="Lower middle income",
"CountryCode"]
lowerMiddleIncome
dataQ5 <- as.numeric(as.character(dataQ3_1[
match(lowerMiddleIncome,dataQ3_1$X),"Ranking"]))
dataQ5
rankingQ5 <- as.numeric(as.character(dataQ3_1[
match(lowerMiddleIncome,dataQ3_1$X),"Ranking"]))
dataQ5 <- rankingQ5[rankingQ5<=38]
dataQ5
answerQ5 <- sum[!is.na(dataQ5)]
is.na(dataQ5)
answerQ5 <- sum(!is.na(dataQ5))
answerQ5
dataQ3_2$Ranking
dataQ3_1$Ranking
as.character(dataQ3_1$Ranking)
dataQ3_1Trimmed <- dataQ3_2[!is.na(as.numeric(as.character(
dataQ3_1$Ranking))),]
is.na(as.numeric(as.character(
dataQ3_1$Ranking)))
as.numeric(as.character(
dataQ3_1$Ranking))
!is.na(as.numeric(as.character(
dataQ3_1$Ranking)))
dataQ3_2[!is.na(as.numeric(as.character(
dataQ3_1$Ranking))),]
View(dataQ3_1Trimmed)
dataQ3_1Trimmed <- dataQ3_1[!is.na(as.numeric(as.character(
dataQ3_1$Ranking))),]
View(dataQ3_1Trimmed)
matchingData <- match(dataQ3_2$CountryCode,dataQ3_1Trimmed$X)
Q3 <- sum(!is.na(unique(matchingData)))
which(agricultureLogical)
